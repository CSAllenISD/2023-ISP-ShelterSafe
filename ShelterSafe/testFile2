import MapKit

// Define a ViewController with MapKit
class ViewController: UIViewController, MKMapViewDelegate {
    
    // Define a map view
    var mapView: MKMapView!

    override func viewDidLoad() {
        super.viewDidLoad()

        // Create a map view
        mapView = MKMapView(frame: view.bounds)
        mapView.delegate = self
        view.addSubview(mapView)

        // Define a location to center the map on
        let location = CLLocationCoordinate2D(latitude: 37.7749, longitude: -122.4194)

        // Define a region to display on the map
        let region = MKCoordinateRegion(center: location, span: MKCoordinateSpan(latitudeDelta: 0.01, longitudeDelta: 0.01))
        mapView.setRegion(region, animated: true)

        // Add a pin to the map
        let annotation = MKPointAnnotation()
        annotation.coordinate = location
        annotation.title = "San Francisco"
        annotation.subtitle = "California"
        mapView.addAnnotation(annotation)
    }
    
    // Implement the MKMapViewDelegate method to customize the pin view
    func mapView(_ mapView: MKMapView, viewFor annotation: MKAnnotation) -> MKAnnotationView? {
        let identifier = "pin"
        var view: MKPinAnnotationView

        if let dequeuedView = mapView.dequeueReusableAnnotationView(withIdentifier: identifier) as? MKPinAnnotationView {
            dequeuedView.annotation = annotation
            view = dequeuedView
        } else {
            view = MKPinAnnotationView(annotation: annotation, reuseIdentifier: identifier)
            view.canShowCallout = true
            view.calloutOffset = CGPoint(x: -5, y: 5)
            view.rightCalloutAccessoryView = UIButton(type: .detailDisclosure)
        }

        return view
    }
}


